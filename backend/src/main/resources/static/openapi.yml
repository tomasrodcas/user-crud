openapi: 3.0.3
info:
  title: API de Usuarios
  description: API para gestionar usuarios, incluyendo creación, actualización, eliminación y consulta.
  version: 1.0.0

servers:
  - url: http://localhost:8080/api/v1
    description: Servidor local de desarrollo

paths:
  /users:
    get:
      summary: Obtener todos los usuarios
      description: Retorna una lista de todos los usuarios registrados.
      operationId: obtenerUsuarios
      responses:
        "200":
          description: Lista de usuarios obtenida exitosamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDTO"

    post:
      summary: Crear un usuario
      description: Crea un nuevo usuario en el sistema.
      operationId: crearUsuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequestDTO"
      responses:
        "201":
          description: Usuario creado exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
        "400":
          description: Error de validación en los datos proporcionados.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "409":
          description: Ya existe un usuario con este correo electrónico o número de identificación.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Ya existe un usuario con este correo electrónico o número de identificación."

  /users/{id}:
    get:
      summary: Obtener un usuario por ID
      description: Retorna los datos de un usuario específico basado en su ID.
      operationId: obtenerUsuarioPorId
      parameters:
        - name: id
          in: path
          required: true
          description: ID único del usuario
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Datos del usuario obtenidos exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
        "404":
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Usuario no encontrado."

    put:
      summary: Actualizar un usuario
      description: Modifica los datos de un usuario existente.
      operationId: actualizarUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID único del usuario
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequestDTO"
      responses:
        "200":
          description: Usuario actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
        "400":
          description: Error de validación en los datos proporcionados.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Usuario no encontrado."

    delete:
      summary: Eliminar un usuario
      description: Elimina un usuario del sistema.
      operationId: eliminarUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID único del usuario
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Usuario eliminado exitosamente.
          content:
            application/json:
              schema:
                type: boolean
                example: true
        "404":
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Usuario no encontrado."

components:
  schemas:
    UserDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único del usuario.
        firstNames:
          type: string
          description: Nombres del usuario.
        lastNames:
          type: string
          description: Apellidos del usuario.
        rutNumber:
          type: integer
          format: int64
          description: Número de RUT del usuario.
        verificationDigit:
          type: string
          description: Dígito verificador del RUT.
        birthDate:
          type: string
          format: date
          description: Fecha de nacimiento del usuario.
        email:
          type: string
          format: email
          description: Correo electrónico del usuario.

    UserRequestDTO:
      type: object
      properties:
        firstNames:
          type: string
          description: Nombres del usuario.
        lastNames:
          type: string
          description: Apellidos del usuario.
        rutNumber:
          type: integer
          format: int64
          description: Número de RUT del usuario.
        verificationDigit:
          type: string
          description: Dígito verificador del RUT.
        birthDate:
          type: string
          format: date
          description: Fecha de nacimiento del usuario.
        email:
          type: string
          format: email
          description: Correo electrónico del usuario.

    ValidationError:
      type: object
      description: Detalles de errores de validación de entrada.
      properties:
        errores:
          type: object
          additionalProperties:
            type: string
          example:
            firstNames: "El campo no puede estar vacío."
            email: "Debe ser un correo electrónico válido."
